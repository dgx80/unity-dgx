//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace DGX.Character.Action
{
    public class ActionAttack : ActionFighterBase
    {
        public enum eTrigger
        {
            hit
        }
        #region ATTRIBUTES
        
        private Character.Anim.FighterAnimation mFighterAnimation;
        private bool mIsImpacted;
        private int mDamage;
        
        #endregion
        
        #region CONSTRUCTOR
        
        public ActionAttack(int id, Fighter fighter)
            : base (id, fighter)
        {
            mFighterAnimation = FIGHTER.GetComponent<Character.Anim.FighterAnimation> ();;
        }
        
        #endregion

        #region EVENTS

        protected override void handleInit ()
        {
            base.handleInit ();
            if (FIGHTER.OPPONENT == null) {
                Stop();
                return;
            }
            mIsImpacted = false;
            FIGHTER.transform.LookAt (FIGHTER.OPPONENT.transform.position);
            
        }
        protected override void handleRun ()
        {                                                     
            base.handleRun ();
            
            mFighterAnimation.playingAttack ();
            
            if (mIsImpacted) {
                if (mFighterAnimation.isAttackAnimationEnded ()) {
                    if(IS_TRIGGER_EXISTS) {
                        setTrigger((int)eTrigger.hit);
                    } else {
                        Stop();
                    }
                }
            } else if (mFighterAnimation.isImpactTime()) {
                mIsImpacted = true;
                FIGHTER.OPPONENT.GetComponent<Fighter>().getHit(mDamage);
            }
        }
        protected override void handleEnding ()
        {
            base.handleEnding ();
        }
        #endregion
        
        #region PROPERTIES
        
        public GameObject OPPONENT
        { 
            set { FIGHTER.OPPONENT = value; } 
        }
        public int DAMAGE
        { set {mDamage = value; }}
        #endregion
    }
}

